/*
 * This file is generated by jOOQ.
 */
package org.kbalazs.smart_scrum_poker_backend_native.db.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.kbalazs.smart_scrum_poker_backend_native.db.Keys;
import org.kbalazs.smart_scrum_poker_backend_native.db.Public;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.InGamePlayersRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InGamePlayers extends TableImpl<InGamePlayersRecord> {

    private static final long serialVersionUID = 1105155499;

    /**
     * The reference instance of <code>public.in_game_players</code>
     */
    public static final InGamePlayers IN_GAME_PLAYERS = new InGamePlayers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InGamePlayersRecord> getRecordType() {
        return InGamePlayersRecord.class;
    }

    /**
     * The column <code>public.in_game_players.insecure_user_id_secure</code>.
     */
    public final TableField<InGamePlayersRecord, UUID> INSECURE_USER_ID_SECURE = createField(DSL.name("insecure_user_id_secure"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.in_game_players.poker_id_secure</code>.
     */
    public final TableField<InGamePlayersRecord, UUID> POKER_ID_SECURE = createField(DSL.name("poker_id_secure"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.in_game_players.created_at</code>.
     */
    public final TableField<InGamePlayersRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>public.in_game_players</code> table reference
     */
    public InGamePlayers() {
        this(DSL.name("in_game_players"), null);
    }

    /**
     * Create an aliased <code>public.in_game_players</code> table reference
     */
    public InGamePlayers(String alias) {
        this(DSL.name(alias), IN_GAME_PLAYERS);
    }

    /**
     * Create an aliased <code>public.in_game_players</code> table reference
     */
    public InGamePlayers(Name alias) {
        this(alias, IN_GAME_PLAYERS);
    }

    private InGamePlayers(Name alias, Table<InGamePlayersRecord> aliased) {
        this(alias, aliased, null);
    }

    private InGamePlayers(Name alias, Table<InGamePlayersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> InGamePlayers(Table<O> child, ForeignKey<O, InGamePlayersRecord> key) {
        super(child, key, IN_GAME_PLAYERS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<InGamePlayersRecord> getPrimaryKey() {
        return Keys.IN_GAME_PLAYERS__PK___INSECURE_USER_ID_SECURE___POKER_ID_SECURE;
    }

    @Override
    public List<UniqueKey<InGamePlayersRecord>> getKeys() {
        return Arrays.<UniqueKey<InGamePlayersRecord>>asList(Keys.IN_GAME_PLAYERS__PK___INSECURE_USER_ID_SECURE___POKER_ID_SECURE);
    }

    @Override
    public InGamePlayers as(String alias) {
        return new InGamePlayers(DSL.name(alias), this);
    }

    @Override
    public InGamePlayers as(Name alias) {
        return new InGamePlayers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InGamePlayers rename(String name) {
        return new InGamePlayers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InGamePlayers rename(Name name) {
        return new InGamePlayers(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UUID, UUID, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
