/*
 * This file is generated by jOOQ.
 */
package org.kbalazs.smart_scrum_poker_backend_native.db;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.FlywaySchemaHistory;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.InGamePlayers;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.InsecureUser;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.InsecureUserSessions;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.Poker;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.Ticket;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.Vote;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.FlywaySchemaHistoryRecord;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.InGamePlayersRecord;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.InsecureUserRecord;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.InsecureUserSessionsRecord;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.PokerRecord;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.TicketRecord;
import org.kbalazs.smart_scrum_poker_backend_native.db.tables.records.VoteRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<InsecureUserRecord, Long> IDENTITY_INSECURE_USER = Identities0.IDENTITY_INSECURE_USER;
    public static final Identity<PokerRecord, Long> IDENTITY_POKER = Identities0.IDENTITY_POKER;
    public static final Identity<TicketRecord, Long> IDENTITY_TICKET = Identities0.IDENTITY_TICKET;
    public static final Identity<VoteRecord, Long> IDENTITY_VOTE = Identities0.IDENTITY_VOTE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = UniqueKeys0.FLYWAY_SCHEMA_HISTORY_PK;
    public static final UniqueKey<InGamePlayersRecord> IN_GAME_PLAYERS__PK___INSECURE_USER_ID_SECURE___POKER_ID_SECURE = UniqueKeys0.IN_GAME_PLAYERS__PK___INSECURE_USER_ID_SECURE___POKER_ID_SECURE;
    public static final UniqueKey<InsecureUserRecord> INSECURE_USER__PK___ID = UniqueKeys0.INSECURE_USER__PK___ID;
    public static final UniqueKey<InsecureUserRecord> INSECURE_USER__UNIQUE___ID_SECURE = UniqueKeys0.INSECURE_USER__UNIQUE___ID_SECURE;
    public static final UniqueKey<InsecureUserSessionsRecord> INSECURE_USER_SESSIONS__PK___INSECURE_USER_ID_SECURE___SESSION_ = UniqueKeys0.INSECURE_USER_SESSIONS__PK___INSECURE_USER_ID_SECURE___SESSION_;
    public static final UniqueKey<InsecureUserSessionsRecord> INSECURE_USER_SESSIONS__UNIQUE___SESSION_ID = UniqueKeys0.INSECURE_USER_SESSIONS__UNIQUE___SESSION_ID;
    public static final UniqueKey<PokerRecord> POKER__PK___ID = UniqueKeys0.POKER__PK___ID;
    public static final UniqueKey<PokerRecord> POKER__UNIQUE___ID_SECURE = UniqueKeys0.POKER__UNIQUE___ID_SECURE;
    public static final UniqueKey<TicketRecord> TICKET__PK___ID = UniqueKeys0.TICKET__PK___ID;
    public static final UniqueKey<TicketRecord> TICKET__UNIQUE___ID_SECURE = UniqueKeys0.TICKET__UNIQUE___ID_SECURE;
    public static final UniqueKey<VoteRecord> VOTE__PK___ID = UniqueKeys0.VOTE__PK___ID;
    public static final UniqueKey<VoteRecord> VOTE__UNIQUE___TICKET_ID___CREATED_BY = UniqueKeys0.VOTE__UNIQUE___TICKET_ID___CREATED_BY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<InsecureUserSessionsRecord, InsecureUserRecord> INSECURE_USER_SESSIONS__INSECURE_USER_SESSIONS__FK___INSECURE_USER_ID_SECURE___INSECURE = ForeignKeys0.INSECURE_USER_SESSIONS__INSECURE_USER_SESSIONS__FK___INSECURE_USER_ID_SECURE___INSECURE;
    public static final ForeignKey<TicketRecord, PokerRecord> TICKET__TICKET__FK___POKER_ID___POKER__ID___ON_DELETE_CASCADE = ForeignKeys0.TICKET__TICKET__FK___POKER_ID___POKER__ID___ON_DELETE_CASCADE;
    public static final ForeignKey<VoteRecord, TicketRecord> VOTE__VOTE_FK___TICKET_ID___TICKET__ID = ForeignKeys0.VOTE__VOTE_FK___TICKET_ID___TICKET__ID;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<InsecureUserRecord, Long> IDENTITY_INSECURE_USER = Internal.createIdentity(InsecureUser.INSECURE_USER, InsecureUser.INSECURE_USER.ID);
        public static Identity<PokerRecord, Long> IDENTITY_POKER = Internal.createIdentity(Poker.POKER, Poker.POKER.ID);
        public static Identity<TicketRecord, Long> IDENTITY_TICKET = Internal.createIdentity(Ticket.TICKET, Ticket.TICKET.ID);
        public static Identity<VoteRecord, Long> IDENTITY_VOTE = Internal.createIdentity(Vote.VOTE, Vote.VOTE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "flyway_schema_history_pk", new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
        public static final UniqueKey<InGamePlayersRecord> IN_GAME_PLAYERS__PK___INSECURE_USER_ID_SECURE___POKER_ID_SECURE = Internal.createUniqueKey(InGamePlayers.IN_GAME_PLAYERS, "in_game_players__pk___insecure_user_id_secure___poker_id_secure", new TableField[] { InGamePlayers.IN_GAME_PLAYERS.INSECURE_USER_ID_SECURE, InGamePlayers.IN_GAME_PLAYERS.POKER_ID_SECURE }, true);
        public static final UniqueKey<InsecureUserRecord> INSECURE_USER__PK___ID = Internal.createUniqueKey(InsecureUser.INSECURE_USER, "insecure_user__pk___id", new TableField[] { InsecureUser.INSECURE_USER.ID }, true);
        public static final UniqueKey<InsecureUserRecord> INSECURE_USER__UNIQUE___ID_SECURE = Internal.createUniqueKey(InsecureUser.INSECURE_USER, "insecure_user__unique___id_secure", new TableField[] { InsecureUser.INSECURE_USER.ID_SECURE }, true);
        public static final UniqueKey<InsecureUserSessionsRecord> INSECURE_USER_SESSIONS__PK___INSECURE_USER_ID_SECURE___SESSION_ = Internal.createUniqueKey(InsecureUserSessions.INSECURE_USER_SESSIONS, "insecure_user_sessions__pk___insecure_user_id_secure___session_", new TableField[] { InsecureUserSessions.INSECURE_USER_SESSIONS.INSECURE_USER_ID_SECURE, InsecureUserSessions.INSECURE_USER_SESSIONS.SESSION_ID }, true);
        public static final UniqueKey<InsecureUserSessionsRecord> INSECURE_USER_SESSIONS__UNIQUE___SESSION_ID = Internal.createUniqueKey(InsecureUserSessions.INSECURE_USER_SESSIONS, "insecure_user_sessions__unique___session_id", new TableField[] { InsecureUserSessions.INSECURE_USER_SESSIONS.SESSION_ID }, true);
        public static final UniqueKey<PokerRecord> POKER__PK___ID = Internal.createUniqueKey(Poker.POKER, "poker__pk___id", new TableField[] { Poker.POKER.ID }, true);
        public static final UniqueKey<PokerRecord> POKER__UNIQUE___ID_SECURE = Internal.createUniqueKey(Poker.POKER, "poker__unique___id_secure", new TableField[] { Poker.POKER.ID_SECURE }, true);
        public static final UniqueKey<TicketRecord> TICKET__PK___ID = Internal.createUniqueKey(Ticket.TICKET, "ticket__pk___id", new TableField[] { Ticket.TICKET.ID }, true);
        public static final UniqueKey<TicketRecord> TICKET__UNIQUE___ID_SECURE = Internal.createUniqueKey(Ticket.TICKET, "ticket__unique___id_secure", new TableField[] { Ticket.TICKET.ID_SECURE }, true);
        public static final UniqueKey<VoteRecord> VOTE__PK___ID = Internal.createUniqueKey(Vote.VOTE, "vote__pk___id", new TableField[] { Vote.VOTE.ID }, true);
        public static final UniqueKey<VoteRecord> VOTE__UNIQUE___TICKET_ID___CREATED_BY = Internal.createUniqueKey(Vote.VOTE, "vote__unique___ticket_id___created_by", new TableField[] { Vote.VOTE.TICKET_ID, Vote.VOTE.CREATED_BY }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<InsecureUserSessionsRecord, InsecureUserRecord> INSECURE_USER_SESSIONS__INSECURE_USER_SESSIONS__FK___INSECURE_USER_ID_SECURE___INSECURE = Internal.createForeignKey(Keys.INSECURE_USER__UNIQUE___ID_SECURE, InsecureUserSessions.INSECURE_USER_SESSIONS, "insecure_user_sessions__fk___insecure_user_id_secure___insecure", new TableField[] { InsecureUserSessions.INSECURE_USER_SESSIONS.INSECURE_USER_ID_SECURE }, true);
        public static final ForeignKey<TicketRecord, PokerRecord> TICKET__TICKET__FK___POKER_ID___POKER__ID___ON_DELETE_CASCADE = Internal.createForeignKey(Keys.POKER__PK___ID, Ticket.TICKET, "ticket__fk___poker_id___poker__id___on_delete_cascade", new TableField[] { Ticket.TICKET.POKER_ID }, true);
        public static final ForeignKey<VoteRecord, TicketRecord> VOTE__VOTE_FK___TICKET_ID___TICKET__ID = Internal.createForeignKey(Keys.TICKET__PK___ID, Vote.VOTE, "vote_fk___ticket_id___ticket__id", new TableField[] { Vote.VOTE.TICKET_ID }, true);
    }
}
